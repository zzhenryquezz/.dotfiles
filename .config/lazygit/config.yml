git:
    paging:
        useConfig: true

customCommands:
    - key: "C"
      context: "files"
      description: "Commit using convetion commints. Ex: refactor: change variable name"
      prompts:
          - type: "menu"
            title: "Type"
            key: "CommitType"
            options:
                - name: "feat"
                  description: "New feature"
                  value: "feat"

                - name: "refactor"
                  description: "Code change that neither fixes a bug nor adds a feature"
                  value: "refactor"

                - name: "fix"
                  description: "Bug fix"
                  value: "fix"

          - type: "input"
            title: "Scope"
            key: "CommitScope"

          - type: "input"
            title: "Message"
            key: "CommitMessage"

      command: "git commit -m {{if .Form.CommitScope}} '{{.Form.CommitType}}({{.Form.CommitScope}}): {{.Form.CommitMessage}}' {{else}} '{{.Form.CommitType}}: {{.Form.CommitMessage}}' {{end}}"

    - key: "r"
      context: "files"
      description: "Create a refactor commit"
      prompts:
          - type: "input"
            title: "Message"
            key: "CommitMessage"
      command: 'git commit -m "refactor: {{.Form.CommitMessage}}"'

    - key: "R"
      context: "files"
      description: "Create a refactor commit with scope"
      prompts:
          - type: "input"
            title: "Scope"

            key: "CommitScope"
          - type: "input"
            title: "Message"
            key: "CommitMessage"

      command: 'git commit -m "refactor({{.Form.CommitScope}}): {{.Form.CommitMessage}}"'

    - key: "f"
      context: "files"
      description: "Create a feat commit"
      prompts:
          - type: "input"
            title: "Message"
            key: "CommitMessage"
      command: 'git commit -m "feat: {{.Form.CommitMessage}}"'

    - key: "F"
      context: "files"
      description: "Create a fix commit with scope"
      prompts:
          - type: "input"
            title: "Scope"
            key: "CommitScope"

          - type: "input"
            title: "Message"
            key: "CommitMessage"

      command: 'git commit -m "feat({{.Form.CommitScope}}): {{.Form.CommitMessage}}"'

    - key: "b"
      context: "files"
      description: "Create a bug commit"
      prompts:
          - type: "input"
            title: "Message"
            key: "CommitMessage"
      command: 'git commit -m "fix: {{.Form.CommitMessage}}"'

    - key: "B"
      context: "files"
      description: "Create a bug commit with scope"
      prompts:
          - type: "input"
            title: "Scope"
            key: "CommitScope"

          - type: "input"
            title: "Message"
            key: "CommitMessage"

      command: 'git commit -m "fix({{.Form.CommitScope}}): {{.Form.CommitMessage}}"'
